class Employee:
    def __init__(self, name, employee_id, salary):
        self.name = name
        self.employee_id = employee_id
        self.salary = salary

    def display_details(self):
        print(f"Employee ID: {self.employee_id}, Name: {self.name}, Salary: ${self.salary}")

    def update_salary(self, new_salary):
        self.salary = new_salary
        print(f"Updated salary for {self.name} to ${self.salary}")


class Department:
    def __init__(self, department_name):
        self.department_name = department_name
        self.employees = []

    def add_employee(self, employee):
        self.employees.append(employee)
        print(f"Added {employee.name} to the {self.department_name} department.")

    def calculate_total_salary_expenditure(self):
        total_salary = sum(employee.salary for employee in self.employees)
        print(f"Total salary expenditure for {self.department_name} department: ${total_salary}")

    def display_all_employees(self):
        if not self.employees:
            print(f"No employees in the {self.department_name} department.")
            return
        print(f"Employees in {self.department_name} department:")
        for employee in self.employees:
            employee.display_details()


# Interactive code to manage employees and departments
def main():
    departments = {}

    while True:
        print("\nCompany Management System:")
        print("1. Add Department")
        print("2. Add Employee to Department")
        print("3. Display All Employees in a Department")
        print("4. Display Total Salary Expenditure of a Department")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            department_name = input("Enter department name: ")
            if department_name in departments:
                print(f"Department '{department_name}' already exists.")
            else:
                departments[department_name] = Department(department_name)
                print(f"Department '{department_name}' added.")

        elif choice == '2':
            department_name = input("Enter department name: ")
            if department_name not in departments:
                print(f"Department '{department_name}' does not exist.")
            else:
                name = input("Enter employee's name: ")
                employee_id = input("Enter employee's ID: ")
                salary = float(input("Enter employee's salary: "))
                employee = Employee(name, employee_id, salary)
                departments[department_name].add_employee(employee)

        elif choice == '3':
            department_name = input("Enter department name: ")
            if department_name in departments:
                departments[department_name].display_all_employees()
            else:
                print(f"Department '{department_name}' does not exist.")

        elif choice == '4':
            department_name = input("Enter department name: ")
            if department_name in departments:
                departments[department_name].calculate_total_salary_expenditure()
            else:
                print(f"Department '{department_name}' does not exist.")

        elif choice == '5':
            print("Exiting the system.")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 5.")

if __name__ == "__main__":
    main()
